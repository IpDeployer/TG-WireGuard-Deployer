name: Generate WireGuard Config and Notify

on:
  workflow_dispatch:
    inputs:
      peers_count:
        description: "Number of peers to generate"
        required: true
        default: 1

jobs:
  generate-wireguard-config:
    runs-on: ubuntu-latest

    steps:
    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y wireguard-tools

    - name: Generate WireGuard keys
      id: generate_keys
      run: |
        umask 077
        wg genkey | tee privatekey | wg pubkey > publickey

    - name: Generate WireGuard configuration
      id: generate_config
      run: |
        PRIVATE_KEY=$(cat privatekey)
        PUBLIC_KEY=$(cat publickey)
        PEERS_COUNT=${{ github.event.inputs.peers_count }}
        WG_CONFIG="[Interface]
        PrivateKey = $PRIVATE_KEY
        Address = 10.0.0.1/24
        ListenPort = 51820

        "
        for ((i=1; i<=PEERS_COUNT; i++))
        do
          PEER_PRIVATE_KEY=$(wg genkey)
          PEER_PUBLIC_KEY=$(echo $PEER_PRIVATE_KEY | wg pubkey)
          WG_CONFIG+="[Peer]
          PublicKey = $PEER_PUBLIC_KEY
          AllowedIPs = 10.0.0.$((i+1))/32
          Endpoint = engage.cloudflareclient.com:2408
          "
        done
        echo "$WG_CONFIG" > wireguard.conf
        echo "::set-output name=config::$(cat wireguard.conf)"
      
    - name: Show configuration
      run: cat wireguard.conf

    - name: Send configuration to Telegram
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      run: |
        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="WireGuard Configuration:\n\n$(cat wireguard.conf)"