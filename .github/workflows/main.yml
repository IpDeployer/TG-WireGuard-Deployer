name: Get Tor WebTunnel Bridges

on:
  workflow_dispatch: # Allow manual trigger

jobs:
  fetch-bridges:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Fetch WebTunnel Bridges
      id: fetch-bridges
      run: |
        # Install required Python library
        python -m pip install requests

        # Fetch bridges from the Tor Project site
        python - <<EOF
        import requests

        # Fetch webtunnel bridges
        url = "https://bridges.torproject.org/options"
        headers = {"User-Agent": "Mozilla/5.0"}
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            # Extract bridges (example parsing logic)
            content = response.text
            # Save as a file
            with open("webtunnel_bridges.txt", "w") as f:
                f.write(content)
        else:
            raise Exception(f"Failed to fetch bridges: {response.status_code}")
        EOF

    - name: Send to Telegram
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      run: |
        # Install Python library for Telegram
        python -m pip install python-telegram-bot

        # Send the file to Telegram
        python - <<EOF
        import telegram

        # Set up bot and chat ID
        chat_id = "${{ env.TELEGRAM_CHAT_ID }}"
        bot = telegram.Bot(token="${{ env.TELEGRAM_TOKEN }}")

        # Upload the file to Telegram
        with open("webtunnel_bridges.txt", "rb") as file:
            bot.send_document(chat_id=chat_id, document=file)
        EOF