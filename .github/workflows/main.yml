name: WireGuard Config Generator

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:              # Run on every push
    branches:
      - main

jobs:
  generate-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y wireguard-tools

      - name: Generate WireGuard Configuration
        run: |
          # Validate if wg is installed
          if ! command -v wg &> /dev/null; then
              echo "Error: WireGuard tools are not installed."
              exit 1
          fi

          # Extract a random endpoint
          if [[ ! -f endpoints.md ]]; then
              echo "Error: endpoints.md file not found."
              exit 1
          fi

          ENDPOINT=$(awk '/\| [0-9a-f]/ {print $2}' endpoints.md | shuf -n 1)
          if [[ -z "$ENDPOINT" ]]; then
              echo "Error: No valid endpoint found in endpoints.md."
              exit 1
          fi

          # Generate private and public keys
          PRIVATE_KEY=$(wg genkey)
          if [[ -z "$PRIVATE_KEY" ]]; then
              echo "Error: Failed to generate private key."
              exit 1
          fi

          PUBLIC_KEY=$(echo "$PRIVATE_KEY" | wg pubkey)

          # Define configuration
          CONFIG="[Interface]
          Address = 192.168.17.97/24
          DNS = 8.8.8.8, 8.8.2.2
          PrivateKey = $PRIVATE_KEY

          [Peer]
          AllowedIPs = 0.0.0.0/0
          Endpoint = ${ENDPOINT}
          PublicKey = bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=
          "

          # Save configuration to a file
          echo "$CONFIG" > wireguard.conf
          echo "::set-output name=config::$CONFIG"

          # Debug: Output keys and endpoint
          echo "Generated Configuration:"
          echo "$CONFIG"
          echo "Endpoint: $ENDPOINT"
          echo "Public Key: $PUBLIC_KEY"

      - name: Upload Configuration File
        uses: actions/upload-artifact@v3
        with:
          name: wireguard-config
          path: wireguard.conf