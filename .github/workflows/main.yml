name: WireGuard Config Generation

on:
  push:
  schedule:
    - cron: '0 */2 * * *'  # Run every 2 hours
  workflow_dispatch:

jobs:
  generate-wireguard-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          # Define variables inline instead of using wg-gen.conf
          export wg_ip="10.0.0.1"
          export wg_port="51820"
          export wg_clients=5
          export wg_dns="8.8.8.8,8.8.4.4"
          export wg_endpoint="example.com"
          export wg_tunnel="full"
          export wg_users="user1,user2,user3,user4,user5"
      
      - name: Run the WireGuard config generation script
        run: |
          chmod +x scripts/wireguard-config.sh
          ./scripts/wireguard-config.sh

      - name: Archive the generated configuration files
        run: |
          tar -czvf configs.tar.gz /tmp/wireguard/clients.d/

      - name: Upload the configuration archive as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: wireguard-configs
          path: configs.tar.gz

      - name: Send WireGuard configs to Telegram channel
        run: |
          # Use Telegram bot to send the archive
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument" \
            -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -F document=@configs.tar.gz