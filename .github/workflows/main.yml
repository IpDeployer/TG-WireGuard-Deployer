name: Send WireGuard Config to Telegram

on:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight
  workflow_dispatch:

jobs:
  send_wireguard_config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-telegram-bot

      - name: Generate and Send WireGuard Config
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python - << EOF
          import json
          import base64
          import os
          from telegram import Bot
          from telegram.error import TelegramError

          def generate_wireguard_config():
              config = {
                  "local_address": [
                      "172.16.0.2/32",
                      "2606:4700:110:8a6d:21bd:c9c1:a8:747a/128"
                  ],
                  "mtu": 1280,
                  "peer_public_key": "bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",
                  "private_key": base64.b64encode(os.urandom(32)).decode(),
                  "reserved": [149, 94, 161],
                  "server": "engage.cloudflareclient.com",
                  "server_port": 2408
              }

              wg_url = f"wireguard://{config['private_key'].replace('/', '%2F').replace('+', '%2B').replace('=', '%3D')}@{config['server']}:{config['server_port']}?address={','.join(config['local_address']).replace('/', '%2F').replace(':', '%3A')}&reserved={','.join(map(str, config['reserved']))}&publickey={config['peer_public_key'].replace('/', '%2F').replace('+', '%2B').replace('=', '%3D')}&mtu={config['mtu']}#Warp"

              return json.dumps(config, indent=2), wg_url

          # Generate WireGuard Config
          print("Generating WireGuard configuration...")
          config_json, config_url = generate_wireguard_config()

          # Send to Telegram
          bot = Bot(token=os.getenv("TELEGRAM_BOT_TOKEN"))
          try:
              print("Sending configuration to Telegram...")
              bot.send_message(
                  chat_id=os.getenv("TELEGRAM_CHANNEL_ID"),
                  text=f"WireGuard configuration:\n\n```json\n{config_json}\n```",
                  parse_mode="Markdown"
              )
              bot.send_message(
                  chat_id=os.getenv("TELEGRAM_CHANNEL_ID"),
                  text=f"WireGuard URL: {config_url}"
              )
              print("Configuration successfully sent.")
          except TelegramError as e:
              print(f"Telegram error occurred: {e}")
          EOF